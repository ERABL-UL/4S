FROM ubuntu:20.04
LABEL maintaner="Lucas Nunes<lucas.nunes@uni-bonn.de>"

# Timezone
ENV TZ=America/Toronto \
    FORCE_CUDA="1" \
    TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6+PTX" \
    TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && apt-get install --no-install-recommends -y \
    ca-certificates \
    zsh \
    wget \
    libusb-1.0-0-dev \
    libgl-dev \
    python3-dev \
    python3-pip \
    build-essential \
    libopenblas-dev \
    && rm -rf /var/lib/apt/lists/*

RUN distro=ubuntu2004 && arch=x86_64 && wget https://developer.download.nvidia.com/compute/cuda/repos/$distro/$arch/cuda-keyring_1.1-1_all.deb
RUN dpkg -i cuda-keyring_1.1-1_all.deb
RUN apt update && apt install -y cuda-toolkit nvidia-gds nvidia-cuda-toolkit

ENV SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
RUN pip3 install \
    scikit-learn \
    matplotlib==3.3.4 \
    numpy==1.20.1 \
    open3d==0.12.0 \
    plyfile==0.7.3 \
    pytorch-lightning==1.1.8 \
    tensorboard==2.4.1 \
    tensorboard-plugin-wit==1.8.0 \
    torch==1.7.1 \
    torchvision==0.8.2 \
    tqdm==4.56.2 \
    h5py==3.6.0 \ 
    ninja==1.10.2.3 \
    protobuf==3.20.3 \
    pandas==1.3.0 \
    hdbscan

# RUN mkdir -p ~/miniconda3 \
#     && wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh \
#     && bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3 \
#     && rm -rf ~/miniconda3/miniconda.sh \
#     && ~/miniconda3/bin/conda init bash
#     && source ~/.bashrc

# RUN apt remove -y gcc && apt install -y gcc-7 g++-7 cmake
# RUN ln -s /usr/bin/gcc-7 /usr/bin/gcc \
#     && ln -s /usr/bin/g++-7 /usr/bin/g++ \
#     && ln -s /usr/bin/gcc-7 /usr/bin/cc \
#     && ln -s /usr/bin/g++-7 /usr/bin/c++

# RUN git clone --recursive https://github.com/pytorch/pytorch \
#     && cd pytorch \
#     && git checkout v1.7.1 \
#     && git submodule update --init --recursive \
#     && export _GLIBCXX_USE_CXX11_ABI=1 \
#     && conda install mkl mkl-include \
#     && conda install -c pytorch magma-cuda110 \
#     && export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"} \
#     && conda install -y numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions future six requests dataclasses
#     && python setup.py install \
#     && /usr/bin/python3 setup.py install


# # RUN pip3 install -U MinkowskiEngine==0.5.4 --install-option="--blas=openblas" -v --no-deps

# RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.1/zsh-in-docker.sh)" -- -t gentoo
# CMD ["zsh"]

